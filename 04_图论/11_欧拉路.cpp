  连通图：
    在图论中，连通图基于连通的概念。在一个无向图 G 中，若从顶点i到顶点j有路径相连（当然从j到i也一定有路径）
，则称i和j是连通的。如果 G 是有向图，那么连接i和j的路径中所有的边都必须同向。如果图中任意两点都是连通的，那
么图被称作连通图。如果此图是有向图，则称为强连通图（注意：需要双向都有路径）。图的连通性是图的基本性质。

定义：
欧拉路：欧拉路是指从图中任意一个点开始到图中任意一个点结束的路径，并且通过图中每条边，且只通过一次。
欧拉回路:欧拉回路是指起点和终点相同的欧拉路。

无向图是否具有欧拉路或回路的判定:
    欧拉路:图连通，所有点度都是偶数，或者恰好有两个点度是奇数，则有欧拉路。若有奇数点度，则奇数点度点一定是欧
拉路的起点和终点，否则可取任意一点作为起点。
    欧拉回路:图连通，图中所有节点度均为偶数

有向图是否具有欧拉路或回路的判定:
    欧拉路:图连通，除2个端点外其余节点入度=出度；1个端点入度比出度大1；一个端点入度比出度小1，取出度大者为起点，入度大者为终点。
或 所有节点入度等于出度
    欧拉回路:图连通，所有节点入度等于出度

对于Hierholzers算法，前提是假设图G存在欧拉回路，即有向图任意点的出度和入度相同。从任意一个起始点v开始遍历，直到再次到达点v，
即寻找一个环，这会保证一定可以到达点v，因为遍历到任意一个点u，由于其出度和入度相同，故u一定存在一条出边，所以一定可以到达v。
将此环定义为C，如果环C中存在某个点x，其有出边不在环中，则继续以此点x开始遍历寻找环C’，将环C、C’连接起来也是一个大环，如此往
复，直到图G中所有的边均已经添加到环中。

//有向图欧拉回路打印路径模板
//因为有向图欧拉回路的性质，其实st中正序或倒叙输出都没问题，都要回到最初点u=1
void dfs(int u){
    for(int i=head[u];~i;i=e[i].nx){
        int v=e[i].v;
        if(vis[i]) continue;
        vis[i]=1;
        head[u]=i;
        dfs(v);
        i=head[u];
    }
    st[++st[0]]=u;
}

//非递归版
int st[N];
int syst[N*10],systop;

void dfs(int u){
    systop=0;
    syst[++systop]=1; //初始点进入
    while(systop>0){
        int x=syst[systop],i=head[x];
        while((~i)&&vis[i]) i=e[i].nx;
        if(~i){
            syst[++systop]=e[i].v;
            vis[i]=1;
            head[x]=e[i].nx;
        }else{
            systop--,st[++st[0]]=x;
        }
    }
}

//无向图欧拉回路打印路径模板，边或点
void dfs(int u){
    for(int i=head[u];~i;i=e[i].nx){
        int v=e[i].v;
        if(vis[i]) continue;
        vis[i]=vis[i^1]=1; //有向图只用禁掉一条，无向禁两条，具体禁的边看构图而定
        dfs(v);
        //st里边存边，外部存点，st[st[0]]->st[1]输出就是路径结果
    }
    st[++st[0]]=u;
}



问题一：
	一个无向图图中（不是所有点联通，无重边，无自环），求问最少要几笔才能将所有边画到，孤立点不用画。
	考虑无向图欧拉路三种情况：
		1、若只存在一个点，则答案贡献为0，
		2、若奇数入度点为0，则ans+=1
		3、若奇数入度点为cnt,则ans+=cnt/2

问题二：
    给n个字符串，要求排个序，使得si字符串的尾部是si+1字符串的首部，求问是否存在这种排序序列
    思路：
        初始想法就是在一个带有字符串关系之间的图中找到一个合法结果，显然不现实，因为n<=1e5。那么可以设立
    in[26],out[26],vis[26],parent[26]数组，统计各字符串的出入读，并用并查集进行关系合并。若发现只有一个
    i==parent[i],说明只有一个头，那么可能存在合法序列。否则不行。然后根据有向图欧拉路的欧拉路定义，只有满足
    该条件才能存在合法序列。
    注意：
        1.判断是否所有字符串连通 2.注意有向还是无向，从而通过定义解决问题 3、对于给定字符串，如果顺序不能改变，
    那么首字母为out++，尾字母为in++
    
